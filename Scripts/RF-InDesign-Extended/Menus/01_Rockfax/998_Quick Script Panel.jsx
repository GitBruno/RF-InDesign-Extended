#target "InDesign";#targetengine 'main';$.level = 0;if (typeof(EXTENDABLES) === 'undefined') {#include "../../Extendables/extendables.jsx";}$.level = 0;if (typeof(preferences) == 'undefined') {var preferences = require("preferences");}if (typeof(rfidx)       == 'undefined') {var rfidx = require("rockfaxidx");}var scriptName = File($.fileName).displayName.replace(/\.jsx|^\d+_/gi, '');// var store = preferences.Store(scriptName);var prefs = preferences.Store(scriptName);prefs.refresh();// prefs.data['text'] = "test";// prefs.save();main(prefs);function main (prefs) {  $.level = 0;  app.scriptPreferences.enableRedraw = true;  var scriptName = type_ahead ([], prefs);      rfidx.doScript(RegExp.escape(scriptName));  app.scriptPreferences.enableRedraw = false;}function type_ahead(array, prefs) {  var w = new Window("dialog", "Execute a Script");  var entry = w.add("edittext", [0, 0, 250, 22]);  entry.active = true;  entry.enterKeySignalsOnChange = true;  var list = w.add("listbox", [0, 0, 400, 200], array, {    scrolling: true  });  list.selection = 0;  entry.onChanging = function() {    _onChanging();  };    entry.onChange = function() {    w.close(1);  };      var okButton = w.add ("button", undefined, "OK");  okButton.visible = false;      var _onChanging = function() {    list.onChange = null;    prefs.data['text'] = entry.text;    prefs.save();    var pattern = new RegExp(entry.text+".*\.jsx", "ig");    // pattern.ignoreCase = true;    // pattern.global = true;    list.removeAll();    var scripts = rfidx.filesMatching(pattern);    var maxLen = 15;    maxLen = [scripts.length, maxLen].min();        var pattern = /^RF|__all__|Mixins|^Rockfax\.jsx/;        for(var i = 0; i < maxLen; i++) {      if (scripts[i].displayName.match(pattern)) {        maxLen++;        continue;      }      list.add("item", scripts[i].displayName);    }        var variableHeight = ([maxLen,1].max() * 20);    if(list.items.length > 0) list.selection = 0;    list.onChange = function () {w.close(1);};  };      w.onShow = function() {    if (typeof(prefs.data['text']) != 'undefined') {      entry.text = prefs.data['text'];      _onChanging();    }  };  list.onChange = function () {w.close(1);};  if (w.show() != 2) {    return list.selection.text;  }else{    w.close();  }}