// The name of this script is misleading. It should really be "Toggle Correct Layer".// It is not because the name of the script is used for the title of the menu item// when InDesign starts, and Correct Layer is always started up, so the title should// always be "Turn Correct Layer Off". To ensure Correct Layer is off if you previously// shut InDesign down with Correct Layer off, another script checks for that and will// disable correct layer if necessary.#target "InDesign";#targetengine 'main';$.level = 0;#include "../../../Extendables/extendables.jsx";var rfidx = require("rockfaxidx");var persistence = require("persistence");var mnu;var currentMenuItem = getMenuItem();main();function changeMenuItem () {  var newMenuItem = app.scriptMenuActions.add(title());  var handler = function () {app.doScript(File(app.activeScript).fsName);};  newMenuItem.addEventListener("onInvoke", File(app.activeScript).fsName);  mnu.menuItems.add(newMenuItem,LocationOptions.BEFORE,currentMenuItem);  currentMenuItem.remove();  var store = persistence.Store(rfidx.filesMatching("correct_layer_on"));  store.data["on?"] = onOrOff(newMenuItem.title);  store.save();}function onOrOff (title) {  return {    "Turn Correct Layer Off":true,    "Turn Correct Layer On":false  }[title];}function title () {  return {    "Turn Correct Layer Off":"Turn Correct Layer On",    "Turn Correct Layer On":"Turn Correct Layer Off"  }[currentMenuItem.title];}function getMenuItem () {  mnu = app.menus.item("$ID/Main").submenus.item("Rockfax").submenus.item("Correct Layer");  var items = mnu.menuItems;  for (var i = 0; i < items.length; i++) {    if (items[i].title.match(/^Turn Correct Layer /)) {      return items[i];    }  }  return false;}function main () {  changeMenuItem();  var correctLayerFile = File("Event Handlers/Application/afterSelectionAttributeChanged/correct_layer.jsx").at(Folder.extendables.parent);  var myEventListeners = app.eventListeners.everyItem();  if (!myEventListeners.is(Array)) {    myEventListeners = [myEventListeners];  }  var elNames = [];  for (var i = 0; i < myEventListeners.length; i++) {    elNames.push(myEventListeners[i].name);  }  if (elNames.flatten().contains("correct_layer.jsx")) {    app.eventListeners.item("correct_layer.jsx").remove();  } else {    addEvent ("Application", "afterSelectionAttributeChanged", correctLayerFile.fsName, correctLayerFile.displayName);  }  function addEvent (targetName, eventType, script, eventName) {    var target = {"Application":app}[targetName];    if (script.match(/\.jsx$|\.applescript$|\.scpt$|\.scptd$/)) {      var myApplicationEventListener = app.eventListeners.add(eventType, script);      myApplicationEventListener.name =eventName;    }  }}